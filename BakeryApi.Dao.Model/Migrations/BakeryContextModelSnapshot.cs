// <auto-generated />
using System;
using BakeryApi.Dao.Model.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BakeryApi.Dao.Model.Migrations
{
    [DbContext(typeof(BakeryContext))]
    partial class BakeryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BakeryApi.Dao.Model.BakeryDao", b =>
                {
                    b.Property<int>("BakeryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BakeryId"));

                    b.Property<string>("BakeryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaxBreads")
                        .HasColumnType("int");

                    b.HasKey("BakeryId");

                    b.ToTable("Bakerys");
                });

            modelBuilder.Entity("BakeryApi.Dao.Model.BreadDao", b =>
                {
                    b.Property<int>("BreadDaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BreadDaoId"));

                    b.Property<string>("BreadDaoName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("BreadDaoId");

                    b.ToTable("Breads");
                });

            modelBuilder.Entity("BakeryApi.Dao.Model.OrderBreadDao", b =>
                {
                    b.Property<int>("OrderBreadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderBreadId"));

                    b.Property<int>("BreadDaoId")
                        .HasColumnType("int");

                    b.Property<int>("OrderDaoId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("OrderBreadId");

                    b.HasIndex("BreadDaoId");

                    b.HasIndex("OrderDaoId");

                    b.ToTable("OrderBreads");
                });

            modelBuilder.Entity("BakeryApi.Dao.Model.OrderDao", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<int?>("BakeryDaoBakeryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("TotalCost")
                        .HasColumnType("real");

                    b.HasKey("OrderId");

                    b.HasIndex("BakeryDaoBakeryId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("BakeryApi.Dao.Model.OrderBreadDao", b =>
                {
                    b.HasOne("BakeryApi.Dao.Model.BreadDao", "BreadDao")
                        .WithMany("BreadDaoList")
                        .HasForeignKey("BreadDaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BakeryApi.Dao.Model.OrderDao", "OrderDao")
                        .WithMany("BreadDaoList")
                        .HasForeignKey("OrderDaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BreadDao");

                    b.Navigation("OrderDao");
                });

            modelBuilder.Entity("BakeryApi.Dao.Model.OrderDao", b =>
                {
                    b.HasOne("BakeryApi.Dao.Model.BakeryDao", null)
                        .WithMany("OrderList")
                        .HasForeignKey("BakeryDaoBakeryId");
                });

            modelBuilder.Entity("BakeryApi.Dao.Model.BakeryDao", b =>
                {
                    b.Navigation("OrderList");
                });

            modelBuilder.Entity("BakeryApi.Dao.Model.BreadDao", b =>
                {
                    b.Navigation("BreadDaoList");
                });

            modelBuilder.Entity("BakeryApi.Dao.Model.OrderDao", b =>
                {
                    b.Navigation("BreadDaoList");
                });
#pragma warning restore 612, 618
        }
    }
}
